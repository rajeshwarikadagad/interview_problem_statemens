 var InputArr = [{ p: 4 }, { p: 2 }, { p:9 }, { p: 6 }];
//Output should be:
//var outputArr = [{p:2},{},{p:4},{},{p:6},{},{},{p:9}];

var outputArr =[];
var sortedArr = InputArr.sort((a,b) => a.p - b.p);
var minNum = sortedArr[0].p

for(let i=0; i< sortedArr.length; i++) {

  if(sortedArr[i].p === minNum) {
    outputArr.push(sortedArr[i]);
  } else {
    outputArr.push({});
    i--;
  }
  minNum++;
}

console.log(JSON.stringify(outputArr));


/***************************************************************/
var maxNum = sortedArr[sortedArr.length-1].p;

for(let i=0; i<sortedArr.length && minNum <=maxNum; i++) {
  if(sortedArr[i].p !== minNum) {
     sortedArr.splice(i,0,{})
  }
  minNum++;
}
console.log(JSON.stringify(sortedArr));


//----------------------------------------looping over nested Object--------------------------------------------------------//
const data = {
  "name": "John",
  "age": 30,
  "address": {
    "street": "123 Main St",
    "city": "New York",
    "state": "NY",
    "zip": "10001"
  },
  "phoneNumbers": [
    {
      "type": "home",
      "number": "555-555-1234"
    },
    {
      "type": "work",
      "number": "555-555-5678"
    }
  ]
};

function recursiveFun(obj) {
 for(key in obj) {
  
  if(typeof obj[key] == 'object') {
    recursiveFun(obj[key]);
  } else if(Array.isArray(obj[key])) {
      for(let i=0; i<obj[key].length; i++) {
         recursiveFun(obj[key][i])
      }
  } else {
    console.log(obj[key])
  }
  
 }
}

recursiveFun(data);
